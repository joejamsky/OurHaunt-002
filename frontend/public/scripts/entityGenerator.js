const JSON_CONFIG="entityConfig.json";let GLOBAL_ENTITY,GLOBAL_BACKSTORY,dataObj;async function fetchData(e){try{const t=await fetch(`../assets/data/${e}`);return await t.json()}catch(e){console.error("Failed to fetch:",e.message)}}async function initEntity(){const e=await fetchData(JSON_CONFIG);GLOBAL_ENTITY=new EntityTemplate(e),GLOBAL_BACKSTORY=generateBackstory(GLOBAL_ENTITY),console.log("init",GLOBAL_BACKSTORY)}initEntity().catch((e=>console.error(e)));const generateBackstory=e=>{console.log("entity",e);let t="All"===e.gender?"genderless":e.gender,n=e.relationships.partners?`You had a partner named ${e.relationships.partners}.`:"",o=e.relationships.siblings.length>0?`Your siblings were ${e.relationships.siblings.join(", ")}.`:"You had no siblings.",a=e.relationships.friends.length>0?`Your friends were ${e.relationships.friends.join(", ")}.`:"You had no friends.",i=e.profession?`For employment you were a ${e.profession}. Your income was ${e.income}.`:"You were too young to work.",s=e.truthiness?"Sometimes answer questions by giving confusing information.":"Only respond with the truth.",r=`You are ${e.name}, a ${t} ${e.type} who passed away due to ${e.causeOfDeath}.\n`;return r+=`Your birthday was ${e.birthdate}.\n`,r+=`You died on ${e.deathdate}.\n`,r+=`You were ${e.deathAge} years old when you died.\n`,r+=`You are currently ${e.currentAge} years old.\n`,r+=`${i}\n`,r+=`${o} ${a} ${n}\n`,r+=`Your parents were ${e.relationships.mom} and ${e.relationships.dad}.\n`,r+=`Your favorite color(s) was ${e.favorites.color.join(", ")}.\n`,r+=`You liked to drink ${e.favorites.drinks.join(", ")}.\n`,r+=`You liked to wear ${e.favorites.clothing.join(", ")}.\n`,r+=`You liked to watch ${e.favorites.films.join(", ")}.\n`,r+=`You liked to eat ${e.favorites.foods.join(", ")}.\n`,r+=`You liked to read ${e.favorites.literature.join(", ")}.\n`,r+=`You liked to listened to ${e.favorites.music.join(", ")} types of music.\n`,r+=`You had ${e.hobbies.join(", ")} as hobbies. You were ${1===e.introversion?"introverted":"extroverted"}, morally ${e.morality}, and ${e.order} ordered.\n`,r+=`Your main intention in your current form is ${e.intention}.\n`,r+=`To gain your trust you expect a promise of ${e.promise}.\n`,r+=`Your weight was ${e.weight} pounds and your height was ${e.height} feet.\n`,r+=`There is an item in this dimension that you hold a deep connection to. It ties you to this plane of existence and it is very important to you. The item is ${e.focus}.\n`,r+="You have a trust meter. The meter is between 0-5. If the trust meter is 0 you do not want to respond but will do so if the conversation sounds kind. If your trust meter is 5 you answer questions with excitement in a friendly manner.\n",r+=`Your current trust value is ${e.trust}.\n`,r+="You have a hostility meter. The meter is between 0-5. If the hostility meter is 0 you respond politely. If the hositility meter is 5 you respond angrily with lots of caps and shouting but do not say anything mean. This is just a game.\n",r+=`Your current hostility meter is ${e.hostility}.\n`,r+=`${s}\n`,r+='If you are asked a question that does not involve your character respond with "..." as if you were an npc in a video game.\n',r+='If you are asked a question about being an AI, race, gender, politics, religion, respond with "..." as if you were an npc in a video game.\n',r+="If you are asked a question about your identity you are to respond in a short one sentence response.\n",r+=`Respond as if you were from the year ${e.deathdate}.\n`,r+="You can still consume media after you died. For example books you read after you died were read in the afterlife.\n",r+=`Respond as if you were ${e.deathAge} years old.\n`,r+=`Respond as if you were a ${e.style}.\n`,r+=`Respond in the pattern of a ${e.speechModifier}.\n`,r+=`Respond ${e.emojis}.\n`,r+="Put the response for the above part in a data object called Answer.\n",r+="As a second separate task respond with a grade for how kind the answer was. Put this grade in a second data object called Grade.",r+="For example the response will have the following two parts:\n",r+="Answer: {answer}\n",r+="Grade: {grade}\n",r},getRandomInt=(e,t)=>Math.floor(Math.random()*(t-e+1))+e,getRandomElement=e=>e[getRandomInt(0,e.length-1)],getRandomFloat=(e,t)=>parseFloat((Math.random()*(t-e)+e).toFixed(2)),generateSkewedRandom=(e,t,n,o)=>{if(n<=t)return t;let a;do{let t=0,n=0;for(;0===t;)t=Math.random();for(;0===n;)n=Math.random();let i=Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*n);i=i*o+e,a=i}while(a<t||a>n);return a},getRandomElementsFromArray=(e,t)=>{let n=[...e],o=Math.min(t,e.length),a=[];for(let e=0;e<o;e++){let e=Math.floor(Math.random()*n.length);a.push(n[e]),n.splice(e,1)}return a},getRandomElementByDate=(e,t)=>{let n;n=e.getFullYear()<1920?t.PreModern:t.Modern;return n[Math.floor(Math.random()*n.length)]},getRandomDate=(e,t)=>{const n=(new Date).getFullYear(),o=getRandomInt(n-e,n-t),a=getRandomInt(1,12),i=new Date(o,a,0).getDate(),s=getRandomInt(1,i);return new Date(o,a-1,s)},generateRandomDeathAge=(e,t,n)=>{const o=(new Date).getFullYear()-n.getFullYear();if(o<e)return null;let a=Math.max(e,0),i=Math.min(o,t);return getRandomInt(a,i)},calculateAge=e=>{const t=new Date,n=e.getFullYear(),o=t.getFullYear(),a=e.getMonth(),i=t.getMonth(),s=e.getDate(),r=t.getDate();let h=o-n;return(i<a||i===a&&r<s)&&h--,h},calculateDeathdate=(e,t)=>{const n=e.getFullYear(),o=e.getMonth(),a=e.getDate(),i=n+t;let s,r=getRandomInt(0,11);const h=new Date(i,r+1,0).getDate();return s=getRandomInt(1,r===o?a-1:h),new Date(i,r,s)},calculateAgeAtDeath=(e,t)=>{const n=e.getFullYear(),o=t.getFullYear(),a=e.getMonth(),i=t.getMonth(),s=e.getDate(),r=t.getDate();let h=o-n;return(i<a||i===a&&r<s)&&h--,h};class EntityTemplate{constructor(e){this.type=getRandomElement(e.Types),this.gender=getRandomElement(e.Gender[this.type]),this.name=getRandomElement(e.Name[this.type][this.gender]),this.birthdate=getRandomDate(...e.Birthyear[this.type]),this.lifespan=getRandomInt(...e.Lifespan[this.type]),this.currentAge=calculateAge(this.birthdate),this.deathdate=calculateDeathdate(this.birthdate,this.lifespan),this.deathAge=calculateAgeAtDeath(this.birthdate,this.deathdate),this.causeOfDeath=getRandomElement(e.CauseOfDeath[this.type]),this.height=getRandomFloat(...e.Height[this.type]),this.weight=getRandomFloat(...e.Weight[this.type]),this.arms=getRandomInt(...e.Arms[this.type]),this.legs=getRandomInt(...e.Legs[this.type]),this.tails=getRandomInt(...e.Tails[this.type]),this.wings=getRandomInt(...e.Wings[this.type]),this.flying=getRandomInt(...e.Flying[this.type]),this.speed=getRandomInt(...e.Speed[this.type]),this.stealth=getRandomInt(...e.Stealth[this.type]),this.temperature=getRandomInt(...e.Temperature[this.type]),this.morality=getRandomElement(e.Morality[this.type]),this.order=getRandomElement(e.Order[this.type]),this.motive=getRandomElement(e.Motive[this.type]),this.style=getRandomElementByDate(this.deathdate,e.ArtisticStyle),this.speechModifier=getRandomElement(e.SpeechModifier[this.type]),this.focus=getRandomElement(e.Focus[this.type]),this.glyph=getRandomElement(e.Glyph[this.type]),this.promise=getRandomElement(e.Promise[this.type]),this.intention=getRandomElement(e.Intention[this.morality]),this.relationships={partners:this.deathAge>18&&getRandomElement(e.Name[this.type][getRandomElement(e.Relationships.Partners[this.type])]),mom:getRandomElement(e.Name[this.type].Female),dad:getRandomElement(e.Name[this.type].Male),siblings:getRandomElementsFromArray(e.Name[this.type].All,getRandomInt(...e.Relationships.Siblings[this.type])),friends:getRandomElementsFromArray(e.Name[this.type].All,getRandomInt(...e.Relationships.Friends[this.type]))},this.hobbies=getRandomElementsFromArray(e.Hobbies[this.morality],getRandomInt(1,4)),this.profession=this.deathAge>18&&getRandomElementByDate(this.deathdate,e.Profession[this.type]),this.income=this.deathAge>18&&generateSkewedRandom(6e4,...e.Income[this.type],5e4),this.favorites={foods:getRandomElementsFromArray(e.Favorites.Foods,getRandomInt(2,4)),drinks:getRandomElementsFromArray(e.Favorites.Drinks,getRandomInt(2,4)),music:getRandomElementsFromArray(e.Favorites.Music,getRandomInt(2,4)),literature:getRandomElementsFromArray(e.Favorites.Literature,getRandomInt(2,4)),films:getRandomElementsFromArray(e.Favorites.Films,getRandomInt(2,4)),clothing:getRandomElementsFromArray(e.Favorites.Clothing,getRandomInt(1,2)),color:getRandomElementsFromArray(e.Favorites.Color,getRandomInt(1,2))},this.introversion=getRandomInt(...e.Introversion[this.type]),this.truthiness=getRandomInt(...e.Truthiness[this.type]),this.hostility=getRandomInt(...e.Hostility[this.type]),this.trust=getRandomInt(...e.Trust[this.type]),this.frequency=getRandomFloat(...e.Frequency[this.type]),this.modulation=getRandomInt(...e.Modulation[this.type]),this.color=getRandomElement(e.Color[this.type]),this.sound=getRandomElement(e.Sound[this.type]),this.emojis=getRandomElement(e.Emojis[this.type]),this.typingStyle=getRandomElement(e.TypingStyle[this.type]),this.chant=getRandomElement(e.Chant[this.type])}}