const startLatDiv=document.getElementById("start-lat"),startLonDiv=document.getElementById("start-lon"),currentLatDiv=document.getElementById("current-lat"),currentLonDiv=document.getElementById("current-lon"),stabalizedLatDiv=document.getElementById("stabalized-lat"),stabalizedLonDiv=document.getElementById("stabalized-lon"),distanceLatDiv=document.getElementById("distance-lat"),distanceLonDiv=document.getElementById("distance-lon"),distanceTotalDiv=document.getElementById("distance-total"),outofboundsWarning=document.getElementById("outofbounds-warning-container"),gpsIdentifier=document.getElementById("gps-identifier");let currentLat,currentLon,startLat,startLon,distanceFromHotspotTotal,distanceFromHotspotLon,distanceFromHotspotLat,stabilizedCoords;const radius=10;let positionsList=[];const geolocationOptions={enableHighAccuracy:!0,timeout:1e3,maximumAge:0};function initLocation(){navigator.geolocation?(navigator.geolocation.getCurrentPosition(startPosition),navigator.geolocation.watchPosition(currentLocation,locationError,geolocationOptions),setTimeout((()=>{navigator.geolocation.getCurrentPosition(startPosition)}),"3000")):alert("This device does not support the required geolocation functions for this app to work properly. For best results see FAQ section.")}function startPosition(t){startLat=t.coords.latitude,startLon=t.coords.longitude,startLatDiv.innerHTML="start lat "+startLat,startLonDiv.innerHTML="start lon "+startLon}function calculatePIP(t,e){gpsIdentifier.style.top=`${convertRange(t)}%`,gpsIdentifier.style.left=`${convertRange(e)}%`,gpsIdentifier.style.transform=`translate(-${convertRange(t)}%, -${convertRange(e)}%)`}function convertRange(t,e=-10,o=10,n=0,a=100){return(t-e)/(o-e)*(a-n)+n}function currentLocation(t){positionsList.push(t),positionsList.length>5&&positionsList.shift(),stabilizedCoords=stabilizeCoordinates(positionsList),currentLat=stabilizedCoords.latitude,currentLon=stabilizedCoords.longitude,distanceFromHotspotLat=calculateLatitudeDistance(startLat,currentLat),distanceFromHotspotLon=calculateLongitudeDistance(startLon,currentLon,currentLat),calculatePIP(distanceFromHotspotLat,distanceFromHotspotLon),distanceFromHotspotTotal=calculateTotalDistance(distanceFromHotspotLon,distanceFromHotspotLat),currentLatDiv.innerHTML="current Latitude: "+t.coords.latitude,currentLonDiv.innerHTML="current Longitude: "+t.coords.longitude,distanceLatDiv.innerHTML="distance Latitude: "+distanceFromHotspotLon,distanceLonDiv.innerHTML="distance Longitude: "+distanceFromHotspotLat,distanceTotalDiv.innerHTML="distance Total: "+distanceFromHotspotTotal}function locationError(t){switch(console.log("Location error: ",t),t.code){case t.PERMISSION_DENIED:alert("User denied the request for Geolocation.");break;case t.POSITION_UNAVAILABLE:alert("Location information is unavailable.");break;case t.TIMEOUT:break;case t.UNKNOWN_ERROR:alert("An unknown error occurred.")}}function calculateLatitudeDistance(t,e){return 6371e3*deg2rad(e-t)}function calculateLongitudeDistance(t,e,o){var n=deg2rad(e-t),a=Math.sin(n/2)*Math.sin(n/2)*Math.cos(deg2rad(o))*Math.cos(deg2rad(o)),i=6371e3*(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)));return e<t&&(i*=-1),i}function calculateTotalDistance(t,e){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2))}function convertLonLatToXY(t,e){const o=6371e3;return{x:t*Math.PI/180*o*Math.cos(e*Math.PI/180),y:e*Math.PI/180*o}}function deg2rad(t){return t*(Math.PI/180)}function stabilizeCoordinates(t){for(var e={latitude:0,longitude:0},o=0;o<t.length;o++)e.latitude+=t[o].coords.latitude,e.longitude+=t[o].coords.longitude;return e.latitude/=t.length,e.longitude/=t.length,stabalizedLatDiv.innerHTML="stabalized Latitude: "+e.latitude,stabalizedLonDiv.innerHTML="stabalized Longitude: "+e.longitude,e}