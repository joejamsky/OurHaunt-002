import*as THREE from"./three.module.js";import{DeviceOrientationControls}from"./DeviceOrientationControls.js";let camera,scene,renderer,orientationControls,raycaster,pointerPosition,sceneCubes,cubesDestroyed;var monsterMesh;sceneCubes=[],cubesDestroyed=0;const startButton=document.getElementById("startButton"),videoWidth=window.innerWidth,videoHeight=.7*window.innerHeight;function startVideo(){const e=document.getElementById("video");navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:{exact:"environment"}}}).then((n=>{e.srcObject=n,e.play()})).catch((e=>{console.error("Unable to access the camera.",e)}))}function openFullscreen(){var e=document.documentElement;e.requestFullscreen?e.requestFullscreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen(),screen.orientation.lock("landscape")}function handleTouch(e){pointerPosition.x=e.touches[0].clientX/videoWidth*2-1,pointerPosition.y=-e.touches[0].clientY/videoHeight*2+1}function generateSplitRandomClamped(){const e=Math.floor(19*Math.random())+-10;return e>=-1?e+(e>=0?2:-2):e}function addItemTimed(){}function getRandomPosition(e){return{x:e.position.x,y:Math.floor(4*Math.random()+0),z:e.position.z}}function moveObjectRandom(e){var n=getRandomPosition(e);new TWEEN.Tween(e.position).to(n,2e3).easing(TWEEN.Easing.Quadratic.InOut).onComplete((function(){moveObjectRandom(e)})).start()}function initMonster(){const e=new THREE.BoxGeometry(1,1,1),n=new THREE.MeshBasicMaterial({color:65280});(monsterMesh=new THREE.Mesh(e,n)).position.set(0,1,-3),scene.add(monsterMesh),moveObjectRandom(monsterMesh)}function rotateCamera(){camera.rotation.y+=.01}startButton.addEventListener("click",(function(){document.getElementById("overlay").remove(),startVideo(),initLocation(),initScene(),initMonster(),animate()}),!1);const geoHeadingDiv=document.getElementById("geo-heading");let heading;function handleOrientation(e){e.webkitCompassHeading?heading=e.webkitCompassHeading:null!==e.alpha&&(heading=360-e.alpha),geoHeadingDiv.innerHTML="Geo-Heading: "+heading}function startCompassListener(){window.DeviceOrientationEvent?window.addEventListener("deviceorientation",handleOrientation,!1):console.warn("DeviceOrientation API not supported")}function onWindowResize(){camera.aspect=videoWidth/videoHeight,camera.updateProjectionMatrix(),renderer.setSize(videoWidth,videoHeight)}function initScene(){camera=new THREE.PerspectiveCamera(75,videoWidth/videoHeight,1,1100),camera.position.set(0,1,0),orientationControls=new DeviceOrientationControls(camera),raycaster=new THREE.Raycaster,pointerPosition=new THREE.Vector2,scene=new THREE.Scene;const e=new THREE.BoxBufferGeometry(100,100,100,4,4,4),n=new THREE.MeshBasicMaterial({color:16711935,wireframe:!0}),t=new THREE.Mesh(e,n);scene.add(t),renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(videoWidth,videoHeight),document.body.appendChild(renderer.domElement),window.addEventListener("resize",onWindowResize,!1),window.addEventListener("touchstart",handleTouch),window.setInterval((function(){}),4e3),window.setTimeout((function(){startCompassListener(),scene.rotation.set(0,heading,0)}),4e3)}function animate(){window.requestAnimationFrame(animate),orientationControls.update(),raycaster.setFromCamera(pointerPosition,camera);const e=raycaster.intersectObjects(scene.children);TWEEN.update();for(let n=0;n<e.length;n++);renderer.render(scene,camera)}