import{Euler,EventDispatcher,MathUtils,Quaternion,Vector3}from"./three.module.js";var DeviceOrientationControls=function(e){var t=this,n={type:"change"};this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0;var i,o,r,a,c,s=function(e){t.deviceOrientation=e},d=function(){t.screenOrientation=window.orientation||0},v=(i=new Vector3(0,0,1),o=new Euler,r=new Quaternion,a=new Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5)),function(e,t,n,c,s){o.set(n,t,-c,"YXZ"),e.setFromEuler(o),e.multiply(a),e.multiply(r.setFromAxisAngle(i,-s))});this.connect=function(){d(),void 0!==window.DeviceOrientationEvent&&"function"==typeof window.DeviceOrientationEvent.requestPermission?window.DeviceOrientationEvent.requestPermission().then((function(e){"granted"==e&&(window.addEventListener("orientationchange",d,!1),window.addEventListener("deviceorientation",s,!1))})).catch((function(e){console.error("THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:",e)})):(window.addEventListener("orientationchange",d,!1),window.addEventListener("deviceorientation",s,!1)),t.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",d,!1),window.removeEventListener("deviceorientation",s,!1),t.enabled=!1},this.update=(c=new Quaternion,function(){if(!1!==t.enabled){var e=t.deviceOrientation;if(e){var i=e.alpha?MathUtils.degToRad(e.alpha)+t.alphaOffset:0,o=e.beta?MathUtils.degToRad(e.beta):0,r=e.gamma?MathUtils.degToRad(e.gamma):0,a=t.screenOrientation?MathUtils.degToRad(t.screenOrientation):0;v(t.object.quaternion,i,o,r,a),8*(1-c.dot(t.object.quaternion))>1e-6&&(c.copy(t.object.quaternion),t.dispatchEvent(n))}}}),this.dispose=function(){t.disconnect()},this.connect()};DeviceOrientationControls.prototype=Object.create(EventDispatcher.prototype),DeviceOrientationControls.prototype.constructor=DeviceOrientationControls;export{DeviceOrientationControls};